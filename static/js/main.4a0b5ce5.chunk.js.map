{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/CreateContactForm/CreateContactForm.module.css","components/App/App.module.css","transitions/slide-500ms.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Alert/Alert.module.css","components/Section/Section.js","components/Notification/Notification.js","components/ContactsList/ContactsListItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/CreateContactForm/CreateContactForm.js","components/Alert/Alert.js","components/App/App.js","index.js","transitions/slide.module.css"],"names":["module","exports","Section","title","children","className","titleSection","Notification","message","ContactsListItem","name","number","onDeleteContact","index","wrap","type","onClick","button","icon","ContactsList","contacts","TransitionGroup","component","list","map","id","CSSTransition","key","timeout","classNames","slideTransition","unmountOnExit","item","NumberFilter","value","onChangeFilter","filter","onChange","placeholder","TaskEditor","state","handleChange","event","setState","target","handleSubmit","preventDefault","props","onAddContact","this","onSubmit","form","htmlFor","Component","Alert","p","App","addTittle","alert","isShow","changeFilter","addContact","contact","some","savedContact","toLowerCase","contactToAdd","shortid","generate","deleteContact","savedContacts","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","filteredContacts","includes","filterContacts","styles","container","in","slideTittleTransition","length","Filter","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4a0b5ce5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2RiYd\",\"item\":\"ContactsList_item__2O7n3\",\"wrap\":\"ContactsList_wrap__2wfAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CreateContactForm_form__1IKsq\",\"button\":\"CreateContactForm_button__v34X3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16xz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide-500ms_enter__3KjJC\",\"enterActive\":\"slide-500ms_enterActive__1PUSQ\",\"exit\":\"slide-500ms_exit__Yd33a\",\"exitActive\":\"slide-500ms_exitActive__3BQFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleSection\":\"Section_titleSection__3sOBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p\":\"Alert_p__3pTNQ\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { titleSection } from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n    <section className={titleSection}>\n        <h2>{title}</h2>\n        {children}\n    </section>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n\n    children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}!</p>;\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { icon, button, wrap } from './ContactsList.module.css';\n\nfunction ContactsListItem({ name, number, onDeleteContact, index }) {\n    return (\n        <>\n            <div>\n                <span>\n                    {index}. {name}\n                </span>\n            </div>\n            <div className={wrap}>\n                <p>{number}</p>\n                <button\n                    type=\"button\"\n                    onClick={onDeleteContact}\n                    className={button}\n                >\n                    <i className={`${icon} material-icons`}>close</i>\n                </button>\n            </div>\n        </>\n    );\n}\n\nContactsListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n    index: PropTypes.number.isRequired,\n};\n\nexport default ContactsListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport { list, item } from './ContactsList.module.css';\nimport ContactsListItem from './ContactsListItem';\nimport slideTransition from '../../transitions/slide.module.css';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => (\n    <TransitionGroup component=\"ul\" className={list}>\n        {contacts.map(({ id, name, number }, index) => (\n            <CSSTransition\n                key={id}\n                timeout={250}\n                classNames={slideTransition}\n                unmountOnExit\n            >\n                <li key={id} className={item}>\n                    <ContactsListItem\n                        index={index + 1}\n                        name={name}\n                        number={number}\n                        onDeleteContact={() => onDeleteContact(id)}\n                    />\n                </li>\n            </CSSTransition>\n        ))}\n    </TransitionGroup>\n);\n\nContactsList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }),\n    ).isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { filter } from './Filter.module.css';\n\nconst NumberFilter = ({ value, onChangeFilter }) => (\n    <div className={filter}>\n        <p>Find contacts by name</p>\n        <input\n            type=\"text\"\n            value={value}\n            onChange={onChangeFilter}\n            placeholder=\"Enter name...\"\n        />\n    </div>\n);\n\nNumberFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default NumberFilter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { form, button } from './CreateContactForm.module.css';\n\nexport default class TaskEditor extends Component {\n    static propTypes = {\n        onAddContact: PropTypes.func.isRequired,\n    };\n\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        this.props.onAddContact({ ...this.state });\n\n        this.setState({\n            name: '',\n            number: '',\n        });\n    };\n\n    render() {\n        const { name, number } = this.state;\n\n        return (\n            <form onSubmit={this.handleSubmit} className={form}>\n                <div>\n                    <label htmlFor=\"name_input\">Name</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter contact`s name\"\n                        value={name}\n                        onChange={this.handleChange}\n                        name=\"name\"\n                        id=\"name_input\"\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"number_input\">Number</label>\n                    <input\n                        type=\"number\"\n                        placeholder=\"Enter contact`s name\"\n                        value={number}\n                        onChange={this.handleChange}\n                        name=\"number\"\n                        id=\"number_input\"\n                    />\n                </div>\n                <button className={button} type=\"submit\">\n                    Add contact\n                </button>\n            </form>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { p } from './Alert.module.css';\n\nconst Alert = ({ message }) => <p className={p}>{message}!</p>;\n\nAlert.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n\nexport default Alert;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { CSSTransition } from 'react-transition-group';\n\nimport styles from './App.module.css';\nimport slideTittleTransition from '../../transitions/slide-500ms.module.css';\nimport slideTransition from '../../transitions/slide.module.css';\n\nimport Section from '../Section/Section';\nimport Notification from '../Notification/Notification';\nimport ContactsList from '../ContactsList/ContactsList';\nimport Filter from '../Filter/Filter';\nimport CreateContactForm from '../CreateContactForm/CreateContactForm';\nimport Alert from '../Alert/Alert';\n\nconst filterContacts = (contacts, filter) => {\n    return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n};\n\nexport default class App extends Component {\n    state = {\n        contacts: [],\n        filter: '',\n        addTittle: false,\n        alert: {\n            isShow: false,\n            message: '',\n        },\n    };\n\n    componentDidMount() {\n        const savedContacts = localStorage.getItem('contacts');\n        this.setState({\n            addTittle: true,\n        });\n        if (savedContacts) {\n            this.setState({ contacts: JSON.parse(savedContacts) });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { contacts } = this.state;\n        if (prevState.alert.isShow) {\n            this.setState({\n                alert: { isShow: false, message: '' },\n            });\n        }\n\n        if (prevState.contacts !== contacts) {\n            localStorage.setItem('contacts', JSON.stringify(contacts));\n        }\n    }\n\n    changeFilter = event => {\n        this.setState({ filter: event.target.value });\n    };\n\n    addContact = contact => {\n        const isUniqueName = this.state.contacts.some(\n            savedContact =>\n                savedContact.name.toLowerCase() === contact.name.toLowerCase(),\n        );\n\n        if (isUniqueName) {\n            this.setState({\n                alert: {\n                    isShow: true,\n                    message: `Contact with ${contact.name} already exist!`,\n                },\n            });\n            return;\n        }\n        const contactToAdd = {\n            ...contact,\n            id: shortid.generate(),\n        };\n        this.setState(state => ({\n            contacts: [...state.contacts, contactToAdd],\n        }));\n    };\n\n    deleteContact = id => {\n        this.setState(state => ({\n            contacts: state.contacts.filter(contact => contact.id !== id),\n            filter: '',\n        }));\n    };\n\n    render() {\n        const { contacts, filter, addTittle, alert } = this.state;\n        const filteredContacts = filterContacts(contacts, filter);\n\n        return (\n            <div className={styles.container}>\n                <CSSTransition\n                    in={addTittle}\n                    timeout={500}\n                    classNames={slideTittleTransition}\n                    unmountOnExit\n                >\n                    <h1>Phonebook</h1>\n                </CSSTransition>\n\n                <Section title=\"\">\n                    <CreateContactForm onAddContact={this.addContact} />\n                </Section>\n\n                <CSSTransition\n                    in={contacts.length >= 2}\n                    timeout={250}\n                    classNames={slideTransition}\n                    unmountOnExit\n                >\n                    <Section title=\"\">\n                        <Filter\n                            value={filter}\n                            onChangeFilter={this.changeFilter}\n                        />\n                    </Section>\n                </CSSTransition>\n\n                <Section title=\"\">\n                    {filteredContacts.length > 0 ? (\n                        <ContactsList\n                            contacts={filteredContacts}\n                            onDeleteContact={this.deleteContact}\n                        />\n                    ) : (\n                        <Notification message=\"Contacts for query not found\" />\n                    )}\n                </Section>\n\n                <CSSTransition\n                    in={alert.isShow}\n                    timeout={250}\n                    classNames={slideTransition}\n                    unmountOnExit\n                >\n                    <Alert message={alert.message} />\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'material-design-icons/iconfont/material-icons.css';\n\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__BLs75\",\"enterActive\":\"slide_enterActive__2XArv\",\"exit\":\"slide_exit__2XvOt\",\"exitActive\":\"slide_exitActive__3LNYO\"};"],"sourceRoot":""}